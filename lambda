import json
import boto3

def lambda_handler(event, context):
    try:
        print("Event received:", event)
        
        if event.get("httpMethod") == "OPTIONS":
            return {
                "statusCode": 200,
                "headers": {
                    "Access-Control-Allow-Origin": "*",
                    "Access-Control-Allow-Methods": "OPTIONS,POST",
                    "Access-Control-Allow-Headers": "Content-Type",
                },
                "body": json.dumps({"message": "CORS preflight OK"})
            }

        bedrock = boto3.client('bedrock-runtime')

        body = {}
        if "body" in event:
            try:
                body = json.loads(event["body"])
            except:
                body = {}
        instruction = body.get("instruction", "Hello from SmartAPI!")

        payload = json.dumps({
            "messages": [
                {"role": "user", "content": [{"type": "text", "text": instruction}]}
            ],
            "max_tokens": 500,
            "anthropic_version": "bedrock-2023-05-31"
        })

        response = bedrock.invoke_model(
            modelId="anthropic.claude-3-sonnet-20240229-v1:0",
            contentType="application/json",
            accept="application/json",
            body=payload
        )

        model_response = json.loads(response["body"].read())
        message = model_response["content"][0]["text"]

        return {
            "statusCode": 200,
            "headers": {
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "OPTIONS,POST",
                "Access-Control-Allow-Headers": "Content-Type",
            },
            "body": json.dumps({"reply": message})
        }

    except Exception as e:
        print("Error occurred:", str(e))
        return {
            "statusCode": 500,
            "headers": {
                "Access-Control-Allow-Origin": "*",
                "Access-Control-Allow-Methods": "OPTIONS,POST",
                "Access-Control-Allow-Headers": "Content-Type",
            },
            "body": json.dumps({"reply": "Error: " + str(e)})
        }
